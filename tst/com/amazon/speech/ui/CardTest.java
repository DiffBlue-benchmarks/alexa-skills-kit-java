package com.amazon.speech.ui;

import org.junit.Assert;
import org.junit.rules.ExpectedException;
import org.junit.Test;

import java.lang.reflect.Array;
import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

import com.diffblue.java_testcase.CompareWithFieldList;
import com.diffblue.java_testcase.FieldList;
import com.diffblue.java_testcase.IterAnswer;
import com.diffblue.java_testcase.Reflector;

public class CardTest {

  @org.junit.Rule
  public ExpectedException thrown = ExpectedException.none();

  /* testedClasses: Card */


  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_ui_Card_getTitle_dd84ded4babdd283_000() throws Throwable {

    String retval;
    {
      /* Arrange */
      com.amazon.speech.ui.AskForPermissionsConsentCard param_0 = (com.amazon.speech.ui.AskForPermissionsConsentCard) Reflector.getInstance("com.amazon.speech.ui.AskForPermissionsConsentCard");
      Reflector.setField(param_0, "permissions", null);
      Reflector.setField(param_0, "title", null);

      /* Act */
      retval = param_0.getTitle();
    }
    {
      /* Assert result */
      Assert.assertEquals(null, retval);
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_ui_Card_setTitle_7315566c0f7a7a08_000() throws Throwable {

    {
      /* Arrange */
      com.amazon.speech.ui.AskForPermissionsConsentCard param_1 = (com.amazon.speech.ui.AskForPermissionsConsentCard) Reflector.getInstance("com.amazon.speech.ui.AskForPermissionsConsentCard");
      Reflector.setField(param_1, "permissions", null);
      Reflector.setField(param_1, "title", null);
      String title = null;

      /* Act */
      param_1.setTitle(title);

      /* Method return type is void, or not expected to return */
    }
  }
}
