package com.amazon.speech.json;

import org.junit.Assert;
import org.junit.rules.ExpectedException;
import org.junit.Test;

import java.lang.reflect.Array;
import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

import com.diffblue.java_testcase.CompareWithFieldList;
import com.diffblue.java_testcase.FieldList;
import com.diffblue.java_testcase.IterAnswer;
import com.diffblue.java_testcase.Reflector;

public class SpeechletResponseEnvelopeTest {

  @org.junit.Rule
  public ExpectedException thrown = ExpectedException.none();

  /* testedClasses: SpeechletResponseEnvelope */


  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_json_SpeechletResponseEnvelope__init__92d824fad5f0c8a_000() throws Throwable {

    com.amazon.speech.json.SpeechletResponseEnvelope instance;
    {
      /* Act */
      /* Creating object to test constructor */
      instance = new com.amazon.speech.json.SpeechletResponseEnvelope();

      /* Method return type is void, or not expected to return */
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_json_SpeechletResponseEnvelope_getResponse_3e54ba0376b5ac7d_000() throws Throwable {

    com.amazon.speech.speechlet.SpeechletResponse retval;
    {
      /* Arrange */
      String param_1 = "";
      com.amazon.speech.json.SpeechletResponseEnvelope param_2 = (com.amazon.speech.json.SpeechletResponseEnvelope) Reflector.getInstance("com.amazon.speech.json.SpeechletResponseEnvelope");
      Reflector.setField(param_2, "sessionAttributes", null);
      Reflector.setField(param_2, "response", null);
      Reflector.setField(param_2, "version", param_1);

      /* Act */
      retval = param_2.getResponse();
    }
    {
      /* Assert result */
      Assert.assertEquals(null, retval);
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_json_SpeechletResponseEnvelope_getSessionAttributes_a72bd90773cda0fd_000() throws Throwable {

    java.util.Map<String, Object> retval;
    {
      /* Arrange */
      String param_1 = "";
      com.amazon.speech.json.SpeechletResponseEnvelope param_2 = (com.amazon.speech.json.SpeechletResponseEnvelope) Reflector.getInstance("com.amazon.speech.json.SpeechletResponseEnvelope");
      Reflector.setField(param_2, "sessionAttributes", null);
      Reflector.setField(param_2, "response", null);
      Reflector.setField(param_2, "version", param_1);

      /* Act */
      retval = param_2.getSessionAttributes();
    }
    {
      /* Assert result */
      Assert.assertEquals(null, retval);
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_json_SpeechletResponseEnvelope_getVersion_7bab1cfafede8d36_000() throws Throwable {

    String retval;
    {
      /* Arrange */
      com.amazon.speech.speechlet.Directive [] dynamic_32_array = new com.amazon.speech.speechlet.Directive []{  };
      com.amazon.speech.speechlet.Directive [] param_1 = dynamic_32_array;

      java.util.ArrayList param_2 = new java.util.ArrayList();

      com.amazon.speech.speechlet.SpeechletResponse param_3 = (com.amazon.speech.speechlet.SpeechletResponse) Reflector.getInstance("com.amazon.speech.speechlet.SpeechletResponse");
      Reflector.setField(param_3, "shouldEndSession", null);
      Reflector.setField(param_3, "outputSpeech", null);
      Reflector.setField(param_3, "card", null);
      Reflector.setField(param_3, "directives", param_2);
      Reflector.setField(param_3, "reprompt", null);
      com.amazon.speech.json.SpeechletResponseEnvelope param_4 = (com.amazon.speech.json.SpeechletResponseEnvelope) Reflector.getInstance("com.amazon.speech.json.SpeechletResponseEnvelope");
      Reflector.setField(param_4, "sessionAttributes", null);
      Reflector.setField(param_4, "response", param_3);
      Reflector.setField(param_4, "version", null);

      /* Act */
      retval = param_4.getVersion();
    }
    {
      /* Assert result */
      Assert.assertEquals(null, retval);
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_json_SpeechletResponseEnvelope_setResponse_62974a43467565af_000() throws Throwable {

    {
      /* Arrange */
      com.amazon.speech.speechlet.SpeechletResponse param_4 = (com.amazon.speech.speechlet.SpeechletResponse) Reflector.getInstance("com.amazon.speech.speechlet.SpeechletResponse");
      Reflector.setField(param_4, "shouldEndSession", null);
      Reflector.setField(param_4, "outputSpeech", null);
      Reflector.setField(param_4, "card", null);
      Reflector.setField(param_4, "directives", null);
      Reflector.setField(param_4, "reprompt", null);
      String param_2 = "";
      com.amazon.speech.json.SpeechletResponseEnvelope param_1 = (com.amazon.speech.json.SpeechletResponseEnvelope) Reflector.getInstance("com.amazon.speech.json.SpeechletResponseEnvelope");
      Reflector.setField(param_1, "sessionAttributes", null);
      Reflector.setField(param_1, "response", param_4);
      Reflector.setField(param_1, "version", param_2);
      com.amazon.speech.speechlet.SpeechletResponse response = null;

      /* Act */
      param_1.setResponse(response);

      /* Method return type is void, or not expected to return */
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_json_SpeechletResponseEnvelope_setSessionAttributes_f0884a9121d09be0_000() throws Throwable {

    {
      /* Arrange */
      String param_2 = "";
      com.amazon.speech.json.SpeechletResponseEnvelope param_1 = (com.amazon.speech.json.SpeechletResponseEnvelope) Reflector.getInstance("com.amazon.speech.json.SpeechletResponseEnvelope");
      Reflector.setField(param_1, "sessionAttributes", null);
      Reflector.setField(param_1, "response", null);
      Reflector.setField(param_1, "version", param_2);
      java.util.Map<String, Object> sessionAttributes = null;

      /* Act */
      param_1.setSessionAttributes(sessionAttributes);

      /* Method return type is void, or not expected to return */
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_json_SpeechletResponseEnvelope_setVersion_513030087f8bd4ff_000() throws Throwable {

    {
      /* Arrange */
      String param_2 = "";
      com.amazon.speech.json.SpeechletResponseEnvelope param_1 = (com.amazon.speech.json.SpeechletResponseEnvelope) Reflector.getInstance("com.amazon.speech.json.SpeechletResponseEnvelope");
      Reflector.setField(param_1, "sessionAttributes", null);
      Reflector.setField(param_1, "response", null);
      Reflector.setField(param_1, "version", param_2);
      String version = null;

      /* Act */
      param_1.setVersion(version);

      /* Method return type is void, or not expected to return */
    }
  }
}
