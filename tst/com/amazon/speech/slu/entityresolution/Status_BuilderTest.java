package com.amazon.speech.slu.entityresolution;

import org.junit.Assert;
import org.junit.rules.ExpectedException;
import org.junit.Test;

import java.lang.reflect.Array;
import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

import com.diffblue.java_testcase.CompareWithFieldList;
import com.diffblue.java_testcase.FieldList;
import com.diffblue.java_testcase.IterAnswer;
import com.diffblue.java_testcase.Reflector;

public class Status_BuilderTest {

  @org.junit.Rule
  public ExpectedException thrown = ExpectedException.none();

  /* testedClasses: Status_Builder */


  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_slu_entityresolution_Status$Builder__init__e0aaf58bc2601c6f_000() throws Throwable {

    Object instance;
    {
      /* Act */
      /* Creating object to test constructor */
      Class<?> c = Reflector.forName("com.amazon.speech.slu.entityresolution.Status$Builder");
      Constructor<?> ctor = c.getDeclaredConstructor();
      ctor.setAccessible(true);
      instance = ctor.newInstance();

      /* Method return type is void, or not expected to return */
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_slu_entityresolution_Status$Builder_access$000_76173ebf0239ef43_000() throws Throwable {

    com.amazon.speech.slu.entityresolution.StatusCode retval;
    {
      /* Arrange */
      Object param_0 = Reflector.getInstance("com.amazon.speech.slu.entityresolution.Status$Builder");
      Reflector.setField(param_0, "code", null);
      Object x0 = param_0;

      /* Act */
      Class<?> c = Reflector.forName("com.amazon.speech.slu.entityresolution.Status$Builder");
      Method m = c.getDeclaredMethod("access$000", Reflector.forName("com.amazon.speech.slu.entityresolution.Status$Builder"));
      m.setAccessible(true);
      retval = (com.amazon.speech.slu.entityresolution.StatusCode) m.invoke(null, x0);
    }
    {
      /* Assert result */
      Assert.assertEquals(null, retval);
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_slu_entityresolution_Status$Builder_build_3faeb712225c5e3d_000() throws Throwable {

    com.amazon.speech.slu.entityresolution.Status retval;
    {
      /* Arrange */
      Object param_0 = Reflector.getInstance("com.amazon.speech.slu.entityresolution.Status$Builder");
      Reflector.setField(param_0, "code", null);

      /* Act */
      Class<?> c = Reflector.forName("com.amazon.speech.slu.entityresolution.Status$Builder");
      Method m = c.getDeclaredMethod("build");
      m.setAccessible(true);
      retval = (com.amazon.speech.slu.entityresolution.Status) m.invoke(param_0);
    }
    {
      /* Assert result */
      Assert.assertNotNull(retval);
      Assert.assertEquals(null, Reflector.getInstanceField(retval, "code"));
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_slu_entityresolution_Status$Builder_withCode_893dc1518643fbbb_000() throws Throwable {

    Object retval;
    {
      /* Arrange */
      Object param_1 = Reflector.getInstance("com.amazon.speech.slu.entityresolution.Status$Builder");
      Reflector.setField(param_1, "code", null);
      com.amazon.speech.slu.entityresolution.StatusCode code = null;

      /* Act */
      Class<?> c = Reflector.forName("com.amazon.speech.slu.entityresolution.Status$Builder");
      Method m = c.getDeclaredMethod("withCode", Reflector.forName("com.amazon.speech.slu.entityresolution.StatusCode"));
      m.setAccessible(true);
      retval = (Object) m.invoke(param_1, code);
    }
    {
      /* Assert result */
      Assert.assertNotNull(retval);
      Assert.assertEquals(null, Reflector.getInstanceField(retval, "code"));
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_slu_entityresolution_Status__init__3caf749f2fab9306_000() throws Throwable {

    Object instance;
    {
      /* Arrange */
      com.amazon.speech.slu.entityresolution.StatusCode code = null;

      /* Act */
      /* Creating object to test constructor */
      Class<?> c = Reflector.forName("com.amazon.speech.slu.entityresolution.Status");
      Constructor<?> ctor = c.getDeclaredConstructor(Reflector.forName("com.amazon.speech.slu.entityresolution.StatusCode"));
      ctor.setAccessible(true);
      instance = ctor.newInstance(code);

      /* Method return type is void, or not expected to return */
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_slu_entityresolution_Status__init__7178edfda65c2029_000() throws Throwable {

    Object instance;
    {
      /* Arrange */
      Object param_2 = Reflector.getInstance("com.amazon.speech.slu.entityresolution.Status$Builder");
      Reflector.setField(param_2, "code", null);
      Object x0 = param_2;
      Object x1 = null;

      /* Act */
      /* Creating object to test constructor */
      Class<?> c = Reflector.forName("com.amazon.speech.slu.entityresolution.Status");
      Constructor<?> ctor = c.getDeclaredConstructor(Reflector.forName("com.amazon.speech.slu.entityresolution.Status$Builder"), Reflector.forName("com.amazon.speech.slu.entityresolution.Status$1"));
      ctor.setAccessible(true);
      instance = ctor.newInstance(x0, x1);

      /* Method return type is void, or not expected to return */
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_slu_entityresolution_Status__init__7259e3abd14929a4_000() throws Throwable {

    Object instance;
    {
      /* Arrange */
      Object param_0 = Reflector.getInstance("com.amazon.speech.slu.entityresolution.Status$Builder");
      Reflector.setField(param_0, "code", null);
      Object builder = param_0;

      /* Act */
      /* Creating object to test constructor */
      Class<?> c = Reflector.forName("com.amazon.speech.slu.entityresolution.Status");
      Constructor<?> ctor = c.getDeclaredConstructor(Reflector.forName("com.amazon.speech.slu.entityresolution.Status$Builder"));
      ctor.setAccessible(true);
      instance = ctor.newInstance(builder);

      /* Method return type is void, or not expected to return */
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_slu_entityresolution_Status_builder_7ebdda399dc2c1a5_000() throws Throwable {

    Object retval;
    {
      /* Act */
      retval = com.amazon.speech.slu.entityresolution.Status.builder();
    }
    {
      /* Assert result */
      Assert.assertNotNull(retval);
      Assert.assertEquals(null, Reflector.getInstanceField(retval, "code"));
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_slu_entityresolution_Status_getCode_fb90614f2d133283_000() throws Throwable {

    com.amazon.speech.slu.entityresolution.StatusCode retval;
    {
      /* Arrange */
      com.amazon.speech.slu.entityresolution.Status param_0 = (com.amazon.speech.slu.entityresolution.Status) Reflector.getInstance("com.amazon.speech.slu.entityresolution.Status");
      Reflector.setField(param_0, "code", null);

      /* Act */
      retval = param_0.getCode();
    }
    {
      /* Assert result */
      Assert.assertEquals(null, retval);
    }
  }
}
