package com.amazon.speech.speechlet;

import org.junit.Assert;
import org.junit.rules.ExpectedException;
import org.junit.Test;

import java.lang.reflect.Array;
import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

import com.diffblue.java_testcase.CompareWithFieldList;
import com.diffblue.java_testcase.FieldList;
import com.diffblue.java_testcase.IterAnswer;
import com.diffblue.java_testcase.Reflector;

public class SpeechletRequestDispatcherTest {

  @org.junit.Rule
  public ExpectedException thrown = ExpectedException.none();

  /* testedClasses: SpeechletRequestDispatcher */


  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_speechlet_SpeechletRequestDispatcher__init__2046f608d63186ae_000() throws Throwable {

    com.amazon.speech.speechlet.SpeechletRequestDispatcher instance;
    {
      /* Arrange */
      com.amazon.speech.speechlet.Speechlet speechlet = null;

      /* Act */
      /* Creating object to test constructor */
      instance = new com.amazon.speech.speechlet.SpeechletRequestDispatcher(speechlet);

      /* Method return type is void, or not expected to return */
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_speechlet_SpeechletRequestDispatcher__init__379f0426890bae4e_000() throws Throwable {

    com.amazon.speech.speechlet.SpeechletRequestDispatcher instance;
    {
      /* Arrange */
      com.amazon.speech.speechlet.SpeechletV2 speechlet = null;

      /* Act */
      /* Creating object to test constructor */
      instance = new com.amazon.speech.speechlet.SpeechletRequestDispatcher(speechlet);

      /* Method return type is void, or not expected to return */
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers:
   * conditional line 332 branch to line 335
   */

  @org.junit.Test
  public void com_amazon_speech_speechlet_SpeechletRequestDispatcher_shouldSaveSessionAttributes_f9826f97ff55cdd0_000() throws Throwable {

    boolean retval;
    {
      /* Arrange */
      com.amazon.speech.speechlet.SpeechletRequestDispatcher param_1 = (com.amazon.speech.speechlet.SpeechletRequestDispatcher) Reflector.getInstance("com.amazon.speech.speechlet.SpeechletRequestDispatcher");
      Reflector.setField(param_1, "speechlet", null);
      com.amazon.speech.speechlet.SpeechletResponse speechletResponse = null;

      /* Act */
      Class<?> c = Reflector.forName("com.amazon.speech.speechlet.SpeechletRequestDispatcher");
      Method m = c.getDeclaredMethod("shouldSaveSessionAttributes", Reflector.forName("com.amazon.speech.speechlet.SpeechletResponse"));
      m.setAccessible(true);
      retval = (boolean) m.invoke(param_1, speechletResponse);
    }
    {
      /* Assert result */
      Assert.assertEquals(true, retval);
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers:
   * conditional line 332 branch to line 332
   * conditional line 332 branch to line 335
   */

  @org.junit.Test
  public void com_amazon_speech_speechlet_SpeechletRequestDispatcher_shouldSaveSessionAttributes_f9826f97ff55cdd0_001() throws Throwable {

    boolean retval;
    {
      /* Arrange */
      com.amazon.speech.speechlet.SpeechletRequestDispatcher param_2 = (com.amazon.speech.speechlet.SpeechletRequestDispatcher) Reflector.getInstance("com.amazon.speech.speechlet.SpeechletRequestDispatcher");
      Reflector.setField(param_2, "speechlet", null);
      com.amazon.speech.speechlet.SpeechletResponse param_0 = (com.amazon.speech.speechlet.SpeechletResponse) Reflector.getInstance("com.amazon.speech.speechlet.SpeechletResponse");
      Reflector.setField(param_0, "shouldEndSession", null);
      Reflector.setField(param_0, "outputSpeech", null);
      Reflector.setField(param_0, "card", null);
      Reflector.setField(param_0, "directives", null);
      Reflector.setField(param_0, "reprompt", null);
      com.amazon.speech.speechlet.SpeechletResponse speechletResponse = param_0;

      /* Act */
      Class<?> c = Reflector.forName("com.amazon.speech.speechlet.SpeechletRequestDispatcher");
      Method m = c.getDeclaredMethod("shouldSaveSessionAttributes", Reflector.forName("com.amazon.speech.speechlet.SpeechletResponse"));
      m.setAccessible(true);
      retval = (boolean) m.invoke(param_2, speechletResponse);
    }
    {
      /* Assert result */
      Assert.assertEquals(true, retval);
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers:
   * conditional line 332 branch to line 332
   * conditional line 332 branch to line 333
   * conditional line 333 branch to line 333
   */

  @org.junit.Test
  public void com_amazon_speech_speechlet_SpeechletRequestDispatcher_shouldSaveSessionAttributes_f9826f97ff55cdd0_002() throws Throwable {

    boolean retval;
    {
      /* Arrange */
      com.amazon.speech.speechlet.SpeechletRequestDispatcher param_3 = (com.amazon.speech.speechlet.SpeechletRequestDispatcher) Reflector.getInstance("com.amazon.speech.speechlet.SpeechletRequestDispatcher");
      Reflector.setField(param_3, "speechlet", null);
      Boolean param_0 = new Boolean(true);
      com.amazon.speech.speechlet.SpeechletResponse param_1 = (com.amazon.speech.speechlet.SpeechletResponse) Reflector.getInstance("com.amazon.speech.speechlet.SpeechletResponse");
      Reflector.setField(param_1, "shouldEndSession", param_0);
      Reflector.setField(param_1, "outputSpeech", null);
      Reflector.setField(param_1, "card", null);
      Reflector.setField(param_1, "directives", null);
      Reflector.setField(param_1, "reprompt", null);
      com.amazon.speech.speechlet.SpeechletResponse speechletResponse = param_1;

      /* Act */
      Class<?> c = Reflector.forName("com.amazon.speech.speechlet.SpeechletRequestDispatcher");
      Method m = c.getDeclaredMethod("shouldSaveSessionAttributes", Reflector.forName("com.amazon.speech.speechlet.SpeechletResponse"));
      m.setAccessible(true);
      retval = (boolean) m.invoke(param_3, speechletResponse);
    }
    {
      /* Assert result */
      Assert.assertEquals(false, retval);
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers:
   * conditional line 332 branch to line 332
   * conditional line 332 branch to line 333
   * conditional line 333 branch to line 333
   */

  @org.junit.Test
  public void com_amazon_speech_speechlet_SpeechletRequestDispatcher_shouldSaveSessionAttributes_f9826f97ff55cdd0_003() throws Throwable {

    boolean retval;
    {
      /* Arrange */
      com.amazon.speech.speechlet.SpeechletRequestDispatcher param_3 = (com.amazon.speech.speechlet.SpeechletRequestDispatcher) Reflector.getInstance("com.amazon.speech.speechlet.SpeechletRequestDispatcher");
      Reflector.setField(param_3, "speechlet", null);
      Boolean param_0 = new Boolean(false);
      com.amazon.speech.speechlet.SpeechletResponse param_1 = (com.amazon.speech.speechlet.SpeechletResponse) Reflector.getInstance("com.amazon.speech.speechlet.SpeechletResponse");
      Reflector.setField(param_1, "shouldEndSession", param_0);
      Reflector.setField(param_1, "outputSpeech", null);
      Reflector.setField(param_1, "card", null);
      Reflector.setField(param_1, "directives", null);
      Reflector.setField(param_1, "reprompt", null);
      com.amazon.speech.speechlet.SpeechletResponse speechletResponse = param_1;

      /* Act */
      Class<?> c = Reflector.forName("com.amazon.speech.speechlet.SpeechletRequestDispatcher");
      Method m = c.getDeclaredMethod("shouldSaveSessionAttributes", Reflector.forName("com.amazon.speech.speechlet.SpeechletResponse"));
      m.setAccessible(true);
      retval = (boolean) m.invoke(param_3, speechletResponse);
    }
    {
      /* Assert result */
      Assert.assertEquals(true, retval);
    }
  }
}
