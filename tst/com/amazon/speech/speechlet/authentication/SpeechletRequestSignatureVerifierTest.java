package com.amazon.speech.speechlet.authentication;

import org.junit.Assert;
import org.junit.rules.ExpectedException;
import org.junit.Test;

import java.lang.reflect.Array;
import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

import com.diffblue.java_testcase.CompareWithFieldList;
import com.diffblue.java_testcase.FieldList;
import com.diffblue.java_testcase.IterAnswer;
import com.diffblue.java_testcase.Reflector;

public class SpeechletRequestSignatureVerifierTest {

  @org.junit.Rule
  public ExpectedException thrown = ExpectedException.none();

  /* testedClasses: SpeechletRequestSignatureVerifier */


  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_speechlet_authentication_SpeechletRequestSignatureVerifier__init__31ec6e6af30ee436_000() throws Throwable {

    Object instance;
    {
      /* Act */
      /* Creating object to test constructor */
      Class<?> c = Reflector.forName("com.amazon.speech.speechlet.authentication.SpeechletRequestSignatureVerifier");
      Constructor<?> ctor = c.getDeclaredConstructor();
      ctor.setAccessible(true);
      instance = ctor.newInstance();

      /* Method return type is void, or not expected to return */
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers:
   * conditional line 174 branch to line 174

   * conditional line 174 branch to line 174
   * conditional line 174 branch to line 187
   */

  @org.junit.Test
  public void com_amazon_speech_speechlet_authentication_SpeechletRequestSignatureVerifier_subjectAlernativeNameListContainsEchoSdkDomainName_d9057e98f6689fd6_000() throws Throwable {

    boolean retval;
    {
      /* Arrange */
      Object param_0 = (Object) Reflector.getInstance("java.lang.Object");
      Object param_1 = (Object) Reflector.getInstance("java.lang.Object");
      Object [] dynamic_2_array = new Object []{ null, param_1, param_0 };
      Object [] param_3 = dynamic_2_array;

      java.util.ArrayList param_4 = new java.util.ArrayList();

      java.util.Collection subjectAlternativeNameEntries = param_4;

      /* Act */
      Class<?> c = Reflector.forName("com.amazon.speech.speechlet.authentication.SpeechletRequestSignatureVerifier");
      Method m = c.getDeclaredMethod("subjectAlernativeNameListContainsEchoSdkDomainName", Reflector.forName("java.util.Collection"));
      m.setAccessible(true);
      retval = (boolean) m.invoke(null, subjectAlternativeNameEntries);
    }
    {
      /* Assert result */
      Assert.assertEquals(false, retval);
    }
  }
}
