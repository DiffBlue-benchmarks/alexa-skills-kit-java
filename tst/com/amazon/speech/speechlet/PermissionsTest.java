package com.amazon.speech.speechlet;

import org.junit.Assert;
import org.junit.rules.ExpectedException;
import org.junit.Test;

import java.lang.reflect.Array;
import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

import com.diffblue.java_testcase.CompareWithFieldList;
import com.diffblue.java_testcase.FieldList;
import com.diffblue.java_testcase.IterAnswer;
import com.diffblue.java_testcase.Reflector;

public class PermissionsTest {

  @org.junit.Rule
  public ExpectedException thrown = ExpectedException.none();

  /* testedClasses: Permissions */


  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_speechlet_Permissions__init__b8b970de0eb4580c_000() throws Throwable {

    com.amazon.speech.speechlet.Permissions instance;
    {
      /* Arrange */
      String consentToken = null;

      /* Act */
      /* Creating object to test constructor */
      instance = new com.amazon.speech.speechlet.Permissions(consentToken);

      /* Method return type is void, or not expected to return */
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_speechlet_Permissions__init__fe349b54ad17c024_000() throws Throwable {

    Object instance;
    {
      /* Act */
      /* Creating object to test constructor */
      Class<?> c = Reflector.forName("com.amazon.speech.speechlet.Permissions");
      Constructor<?> ctor = c.getDeclaredConstructor();
      ctor.setAccessible(true);
      instance = ctor.newInstance();

      /* Method return type is void, or not expected to return */
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_speechlet_Permissions_getConsentToken_354115ac2c6ec70a_000() throws Throwable {

    String retval;
    {
      /* Arrange */
      com.amazon.speech.speechlet.Permissions param_0 = (com.amazon.speech.speechlet.Permissions) Reflector.getInstance("com.amazon.speech.speechlet.Permissions");
      Reflector.setField(param_0, "consentToken", null);

      /* Act */
      retval = param_0.getConsentToken();
    }
    {
      /* Assert result */
      Assert.assertEquals(null, retval);
    }
  }
}
