package com.amazon.speech.speechlet.interfaces.display;

import org.junit.Assert;
import org.junit.rules.ExpectedException;
import org.junit.Test;

import java.lang.reflect.Array;
import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

import com.diffblue.java_testcase.CompareWithFieldList;
import com.diffblue.java_testcase.FieldList;
import com.diffblue.java_testcase.IterAnswer;
import com.diffblue.java_testcase.Reflector;

public class DisplayState_BuilderTest {

  @org.junit.Rule
  public ExpectedException thrown = ExpectedException.none();

  /* testedClasses: DisplayState_Builder */


  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_speechlet_interfaces_display_DisplayState$Builder__init__995a9f1bbd3117be_000() throws Throwable {

    Object instance;
    {
      /* Act */
      /* Creating object to test constructor */
      Class<?> c = Reflector.forName("com.amazon.speech.speechlet.interfaces.display.DisplayState$Builder");
      Constructor<?> ctor = c.getDeclaredConstructor();
      ctor.setAccessible(true);
      instance = ctor.newInstance();

      /* Method return type is void, or not expected to return */
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_speechlet_interfaces_display_DisplayState$Builder__init__b4b0e91a1b61053e_000() throws Throwable {

    Object instance;
    {
      /* Arrange */
      Object x0 = null;

      /* Act */
      /* Creating object to test constructor */
      Class<?> c = Reflector.forName("com.amazon.speech.speechlet.interfaces.display.DisplayState$Builder");
      Constructor<?> ctor = c.getDeclaredConstructor(Reflector.forName("com.amazon.speech.speechlet.interfaces.display.DisplayState$1"));
      ctor.setAccessible(true);
      instance = ctor.newInstance(x0);

      /* Method return type is void, or not expected to return */
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_speechlet_interfaces_display_DisplayState$Builder_access$100_82b0842c98f4553c_000() throws Throwable {

    String retval;
    {
      /* Arrange */
      Object param_0 = Reflector.getInstance("com.amazon.speech.speechlet.interfaces.display.DisplayState$Builder");
      Reflector.setField(param_0, "token", null);
      Object x0 = param_0;

      /* Act */
      Class<?> c = Reflector.forName("com.amazon.speech.speechlet.interfaces.display.DisplayState$Builder");
      Method m = c.getDeclaredMethod("access$100", Reflector.forName("com.amazon.speech.speechlet.interfaces.display.DisplayState$Builder"));
      m.setAccessible(true);
      retval = (String) m.invoke(null, x0);
    }
    {
      /* Assert result */
      Assert.assertEquals(null, retval);
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_speechlet_interfaces_display_DisplayState$Builder_build_10bf0f12d9b73f7_000() throws Throwable {

    com.amazon.speech.speechlet.interfaces.display.DisplayState retval;
    {
      /* Arrange */
      String param_1 = "";
      Object param_2 = Reflector.getInstance("com.amazon.speech.speechlet.interfaces.display.DisplayState$Builder");
      Reflector.setField(param_2, "token", param_1);

      /* Act */
      Class<?> c = Reflector.forName("com.amazon.speech.speechlet.interfaces.display.DisplayState$Builder");
      Method m = c.getDeclaredMethod("build");
      m.setAccessible(true);
      retval = (com.amazon.speech.speechlet.interfaces.display.DisplayState) m.invoke(param_2);
    }
    {
      /* Assert result */
      Assert.assertNotNull(retval);
      Assert.assertNotNull(((String) Reflector.getInstanceField(retval, "token")));
      Assert.assertEquals("", ((String) Reflector.getInstanceField(retval, "token")));
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_speechlet_interfaces_display_DisplayState$Builder_withToken_d3dfde0c26639e43_000() throws Throwable {

    Object retval;
    {
      /* Arrange */
      String param_2 = "";
      Object param_1 = Reflector.getInstance("com.amazon.speech.speechlet.interfaces.display.DisplayState$Builder");
      Reflector.setField(param_1, "token", param_2);
      String token = null;

      /* Act */
      Class<?> c = Reflector.forName("com.amazon.speech.speechlet.interfaces.display.DisplayState$Builder");
      Method m = c.getDeclaredMethod("withToken", Reflector.forName("java.lang.String"));
      m.setAccessible(true);
      retval = (Object) m.invoke(param_1, token);
    }
    {
      /* Assert result */
      Assert.assertNotNull(retval);
      Assert.assertEquals(null, ((String) Reflector.getInstanceField(retval, "token")));
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_speechlet_interfaces_display_DisplayState__init__1575667936270c7a_000() throws Throwable {

    Object instance;
    {
      /* Arrange */
      Object param_0 = Reflector.getInstance("com.amazon.speech.speechlet.interfaces.display.DisplayState$Builder");
      Reflector.setField(param_0, "token", null);
      Object builder = param_0;

      /* Act */
      /* Creating object to test constructor */
      Class<?> c = Reflector.forName("com.amazon.speech.speechlet.interfaces.display.DisplayState");
      Constructor<?> ctor = c.getDeclaredConstructor(Reflector.forName("com.amazon.speech.speechlet.interfaces.display.DisplayState$Builder"));
      ctor.setAccessible(true);
      instance = ctor.newInstance(builder);

      /* Method return type is void, or not expected to return */
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_speechlet_interfaces_display_DisplayState__init__cc29e206202adc2b_000() throws Throwable {

    Object instance;
    {
      /* Arrange */
      Object param_2 = Reflector.getInstance("com.amazon.speech.speechlet.interfaces.display.DisplayState$Builder");
      Reflector.setField(param_2, "token", null);
      Object x0 = param_2;
      Object x1 = null;

      /* Act */
      /* Creating object to test constructor */
      Class<?> c = Reflector.forName("com.amazon.speech.speechlet.interfaces.display.DisplayState");
      Constructor<?> ctor = c.getDeclaredConstructor(Reflector.forName("com.amazon.speech.speechlet.interfaces.display.DisplayState$Builder"), Reflector.forName("com.amazon.speech.speechlet.interfaces.display.DisplayState$1"));
      ctor.setAccessible(true);
      instance = ctor.newInstance(x0, x1);

      /* Method return type is void, or not expected to return */
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_speechlet_interfaces_display_DisplayState__init__d9f74c50bd59a341_000() throws Throwable {

    Object instance;
    {
      /* Arrange */
      String token = null;

      /* Act */
      /* Creating object to test constructor */
      Class<?> c = Reflector.forName("com.amazon.speech.speechlet.interfaces.display.DisplayState");
      Constructor<?> ctor = c.getDeclaredConstructor(Reflector.forName("java.lang.String"));
      ctor.setAccessible(true);
      instance = ctor.newInstance(token);

      /* Method return type is void, or not expected to return */
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_speechlet_interfaces_display_DisplayState_builder_2a1ded4c939d6f6a_000() throws Throwable {

    Object retval;
    {
      /* Act */
      retval = com.amazon.speech.speechlet.interfaces.display.DisplayState.builder();
    }
    {
      /* Assert result */
      Assert.assertNotNull(retval);
      Assert.assertEquals(null, ((String) Reflector.getInstanceField(retval, "token")));
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_speechlet_interfaces_display_DisplayState_getToken_6ad5c405e448c4ed_000() throws Throwable {

    String retval;
    {
      /* Arrange */
      com.amazon.speech.speechlet.interfaces.display.DisplayState param_0 = (com.amazon.speech.speechlet.interfaces.display.DisplayState) Reflector.getInstance("com.amazon.speech.speechlet.interfaces.display.DisplayState");
      Reflector.setField(param_0, "token", null);

      /* Act */
      retval = param_0.getToken();
    }
    {
      /* Assert result */
      Assert.assertEquals(null, retval);
    }
  }
}
