package com.amazon.speech.speechlet.interfaces.audioplayer.request;

import org.junit.Assert;
import org.junit.rules.ExpectedException;
import org.junit.Test;

import java.lang.reflect.Array;
import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

import com.diffblue.java_testcase.CompareWithFieldList;
import com.diffblue.java_testcase.FieldList;
import com.diffblue.java_testcase.IterAnswer;
import com.diffblue.java_testcase.Reflector;

public class PlaybackFailedRequest_BuilderTest {

  @org.junit.Rule
  public ExpectedException thrown = ExpectedException.none();

  /* testedClasses: PlaybackFailedRequest_Builder */


  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_speechlet_interfaces_audioplayer_request_PlaybackFailedRequest$Builder_access$100_bb44e8e78923f452_000() throws Throwable {

    com.amazon.speech.speechlet.interfaces.audioplayer.CurrentPlaybackState retval;
    {
      /* Arrange */
      Object param_0 = Reflector.getInstance("com.amazon.speech.speechlet.interfaces.audioplayer.request.PlaybackFailedRequest$Builder");
      Reflector.setField(param_0, "token", null);
      Reflector.setField(param_0, "error", null);
      Reflector.setField(param_0, "timestamp", null);
      Reflector.setField(param_0, "requestId", null);
      Reflector.setField(param_0, "locale", null);
      Reflector.setField(param_0, "currentPlaybackState", null);
      Object x0 = param_0;

      /* Act */
      Class<?> c = Reflector.forName("com.amazon.speech.speechlet.interfaces.audioplayer.request.PlaybackFailedRequest$Builder");
      Method m = c.getDeclaredMethod("access$100", Reflector.forName("com.amazon.speech.speechlet.interfaces.audioplayer.request.PlaybackFailedRequest$Builder"));
      m.setAccessible(true);
      retval = (com.amazon.speech.speechlet.interfaces.audioplayer.CurrentPlaybackState) m.invoke(null, x0);
    }
    {
      /* Assert result */
      Assert.assertEquals(null, retval);
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_speechlet_interfaces_audioplayer_request_PlaybackFailedRequest$Builder_access$200_d337a4089b969c35_000() throws Throwable {

    com.amazon.speech.speechlet.interfaces.audioplayer.Error retval;
    {
      /* Arrange */
      Object param_0 = Reflector.getInstance("com.amazon.speech.speechlet.interfaces.audioplayer.request.PlaybackFailedRequest$Builder");
      Reflector.setField(param_0, "token", null);
      Reflector.setField(param_0, "error", null);
      Reflector.setField(param_0, "timestamp", null);
      Reflector.setField(param_0, "requestId", null);
      Reflector.setField(param_0, "locale", null);
      Reflector.setField(param_0, "currentPlaybackState", null);
      Object x0 = param_0;

      /* Act */
      Class<?> c = Reflector.forName("com.amazon.speech.speechlet.interfaces.audioplayer.request.PlaybackFailedRequest$Builder");
      Method m = c.getDeclaredMethod("access$200", Reflector.forName("com.amazon.speech.speechlet.interfaces.audioplayer.request.PlaybackFailedRequest$Builder"));
      m.setAccessible(true);
      retval = (com.amazon.speech.speechlet.interfaces.audioplayer.Error) m.invoke(null, x0);
    }
    {
      /* Assert result */
      Assert.assertEquals(null, retval);
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_speechlet_interfaces_audioplayer_request_PlaybackFailedRequest$Builder_access$300_7862f0e3844dc97a_000() throws Throwable {

    String retval;
    {
      /* Arrange */
      Object param_0 = Reflector.getInstance("com.amazon.speech.speechlet.interfaces.audioplayer.request.PlaybackFailedRequest$Builder");
      Reflector.setField(param_0, "token", null);
      Reflector.setField(param_0, "error", null);
      Reflector.setField(param_0, "timestamp", null);
      Reflector.setField(param_0, "requestId", null);
      Reflector.setField(param_0, "locale", null);
      Reflector.setField(param_0, "currentPlaybackState", null);
      Object x0 = param_0;

      /* Act */
      Class<?> c = Reflector.forName("com.amazon.speech.speechlet.interfaces.audioplayer.request.PlaybackFailedRequest$Builder");
      Method m = c.getDeclaredMethod("access$300", Reflector.forName("com.amazon.speech.speechlet.interfaces.audioplayer.request.PlaybackFailedRequest$Builder"));
      m.setAccessible(true);
      retval = (String) m.invoke(null, x0);
    }
    {
      /* Assert result */
      Assert.assertEquals(null, retval);
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_speechlet_interfaces_audioplayer_request_PlaybackFailedRequest$Builder_withCurrentPlaybackState_285161f98729df65_000() throws Throwable {

    Object retval;
    {
      /* Arrange */
      String param_4 = "";
      String param_2 = "";
      Object param_1 = Reflector.getInstance("com.amazon.speech.speechlet.interfaces.audioplayer.request.PlaybackFailedRequest$Builder");
      Reflector.setField(param_1, "token", param_4);
      Reflector.setField(param_1, "error", null);
      Reflector.setField(param_1, "timestamp", null);
      Reflector.setField(param_1, "requestId", param_2);
      Reflector.setField(param_1, "locale", null);
      Reflector.setField(param_1, "currentPlaybackState", null);
      com.amazon.speech.speechlet.interfaces.audioplayer.CurrentPlaybackState currentPlaybackState = null;

      /* Act */
      Class<?> c = Reflector.forName("com.amazon.speech.speechlet.interfaces.audioplayer.request.PlaybackFailedRequest$Builder");
      Method m = c.getDeclaredMethod("withCurrentPlaybackState", Reflector.forName("com.amazon.speech.speechlet.interfaces.audioplayer.CurrentPlaybackState"));
      m.setAccessible(true);
      retval = (Object) m.invoke(param_1, currentPlaybackState);
    }
    {
      /* Assert result */
      Assert.assertNotNull(retval);
      Assert.assertNotNull(((String) Reflector.getInstanceField(retval, "requestId")));
      Assert.assertEquals("", ((String) Reflector.getInstanceField(retval, "requestId")));
      Assert.assertEquals(null, Reflector.getInstanceField(retval, "timestamp"));
      Assert.assertEquals(null, Reflector.getInstanceField(retval, "locale"));
      Assert.assertEquals(null, Reflector.getInstanceField(retval, "currentPlaybackState"));
      Assert.assertEquals(null, Reflector.getInstanceField(retval, "error"));
      Assert.assertNotNull(((String) Reflector.getInstanceField(retval, "token")));
      Assert.assertEquals("", ((String) Reflector.getInstanceField(retval, "token")));
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_speechlet_interfaces_audioplayer_request_PlaybackFailedRequest$Builder_withError_7aa68d80ee6e688_000() throws Throwable {

    Object retval;
    {
      /* Arrange */
      String param_4 = "";
      String param_2 = "";
      Object param_1 = Reflector.getInstance("com.amazon.speech.speechlet.interfaces.audioplayer.request.PlaybackFailedRequest$Builder");
      Reflector.setField(param_1, "token", param_4);
      Reflector.setField(param_1, "error", null);
      Reflector.setField(param_1, "timestamp", null);
      Reflector.setField(param_1, "requestId", param_2);
      Reflector.setField(param_1, "locale", null);
      Reflector.setField(param_1, "currentPlaybackState", null);
      com.amazon.speech.speechlet.interfaces.audioplayer.Error error = null;

      /* Act */
      Class<?> c = Reflector.forName("com.amazon.speech.speechlet.interfaces.audioplayer.request.PlaybackFailedRequest$Builder");
      Method m = c.getDeclaredMethod("withError", Reflector.forName("com.amazon.speech.speechlet.interfaces.audioplayer.Error"));
      m.setAccessible(true);
      retval = (Object) m.invoke(param_1, error);
    }
    {
      /* Assert result */
      Assert.assertNotNull(retval);
      Assert.assertNotNull(((String) Reflector.getInstanceField(retval, "requestId")));
      Assert.assertEquals("", ((String) Reflector.getInstanceField(retval, "requestId")));
      Assert.assertEquals(null, Reflector.getInstanceField(retval, "timestamp"));
      Assert.assertEquals(null, Reflector.getInstanceField(retval, "locale"));
      Assert.assertEquals(null, Reflector.getInstanceField(retval, "currentPlaybackState"));
      Assert.assertEquals(null, Reflector.getInstanceField(retval, "error"));
      Assert.assertNotNull(((String) Reflector.getInstanceField(retval, "token")));
      Assert.assertEquals("", ((String) Reflector.getInstanceField(retval, "token")));
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_speechlet_interfaces_audioplayer_request_PlaybackFailedRequest$Builder_withToken_73671b605b51656c_000() throws Throwable {

    Object retval;
    {
      /* Arrange */
      String param_4 = "";
      String param_2 = "";
      Object param_1 = Reflector.getInstance("com.amazon.speech.speechlet.interfaces.audioplayer.request.PlaybackFailedRequest$Builder");
      Reflector.setField(param_1, "token", param_4);
      Reflector.setField(param_1, "error", null);
      Reflector.setField(param_1, "timestamp", null);
      Reflector.setField(param_1, "requestId", param_2);
      Reflector.setField(param_1, "locale", null);
      Reflector.setField(param_1, "currentPlaybackState", null);
      String token = null;

      /* Act */
      Class<?> c = Reflector.forName("com.amazon.speech.speechlet.interfaces.audioplayer.request.PlaybackFailedRequest$Builder");
      Method m = c.getDeclaredMethod("withToken", Reflector.forName("java.lang.String"));
      m.setAccessible(true);
      retval = (Object) m.invoke(param_1, token);
    }
    {
      /* Assert result */
      Assert.assertNotNull(retval);
      Assert.assertNotNull(((String) Reflector.getInstanceField(retval, "requestId")));
      Assert.assertEquals("", ((String) Reflector.getInstanceField(retval, "requestId")));
      Assert.assertEquals(null, Reflector.getInstanceField(retval, "timestamp"));
      Assert.assertEquals(null, Reflector.getInstanceField(retval, "locale"));
      Assert.assertEquals(null, Reflector.getInstanceField(retval, "currentPlaybackState"));
      Assert.assertEquals(null, Reflector.getInstanceField(retval, "error"));
      Assert.assertEquals(null, ((String) Reflector.getInstanceField(retval, "token")));
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_speechlet_interfaces_audioplayer_request_PlaybackFailedRequest__init__8aff1d7b8a486118_000() throws Throwable {

    Object instance;
    {
      /* Arrange */
      Object param_7 = Reflector.getInstance("sun.util.calendar.BaseCalendar$Date");
      java.util.Date param_6 = (java.util.Date) Reflector.getInstance("java.util.Date");
      Reflector.setField(param_6, "cdate", param_7);
      Reflector.setField(param_6, "fastTime", 0L);
      String param_4 = "";
      Object param_3 = Reflector.getInstance("com.amazon.speech.speechlet.interfaces.audioplayer.request.PlaybackFailedRequest$Builder");
      Reflector.setField(param_3, "token", null);
      Reflector.setField(param_3, "error", null);
      Reflector.setField(param_3, "timestamp", param_6);
      Reflector.setField(param_3, "requestId", param_4);
      Reflector.setField(param_3, "locale", null);
      Reflector.setField(param_3, "currentPlaybackState", null);
      Object x0 = param_3;
      Object param_0 = Reflector.getInstance("com.amazon.speech.speechlet.interfaces.audioplayer.request.PlaybackFailedRequest$1");
      Object x1 = param_0;

      /* Act */
      /* Creating object to test constructor */
      Class<?> c = Reflector.forName("com.amazon.speech.speechlet.interfaces.audioplayer.request.PlaybackFailedRequest");
      Constructor<?> ctor = c.getDeclaredConstructor(Reflector.forName("com.amazon.speech.speechlet.interfaces.audioplayer.request.PlaybackFailedRequest$Builder"), Reflector.forName("com.amazon.speech.speechlet.interfaces.audioplayer.request.PlaybackFailedRequest$1"));
      ctor.setAccessible(true);
      instance = ctor.newInstance(x0, x1);

      /* Method return type is void, or not expected to return */
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_speechlet_interfaces_audioplayer_request_PlaybackFailedRequest__init__9e03b1f0538a613_000() throws Throwable {

    Object instance;
    {
      /* Arrange */
      String requestId = null;
      java.util.Date timestamp = null;
      java.util.Locale locale = null;
      com.amazon.speech.speechlet.interfaces.audioplayer.CurrentPlaybackState currentPlaybackState = null;
      com.amazon.speech.speechlet.interfaces.audioplayer.Error error = null;
      String token = null;

      /* Act */
      /* Creating object to test constructor */
      Class<?> c = Reflector.forName("com.amazon.speech.speechlet.interfaces.audioplayer.request.PlaybackFailedRequest");
      Constructor<?> ctor = c.getDeclaredConstructor(Reflector.forName("java.lang.String"), Reflector.forName("java.util.Date"), Reflector.forName("java.util.Locale"), Reflector.forName("com.amazon.speech.speechlet.interfaces.audioplayer.CurrentPlaybackState"), Reflector.forName("com.amazon.speech.speechlet.interfaces.audioplayer.Error"), Reflector.forName("java.lang.String"));
      ctor.setAccessible(true);
      instance = ctor.newInstance(requestId, timestamp, locale, currentPlaybackState, error, token);

      /* Method return type is void, or not expected to return */
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_speechlet_interfaces_audioplayer_request_PlaybackFailedRequest__init__b4442ea57dbffcfd_000() throws Throwable {

    Object instance;
    {
      /* Arrange */
      String param_1 = "";
      Long param_2 = (Long) Reflector.getInstance("java.lang.Long");
      Reflector.setField(param_2, "value", 0L);
      com.amazon.speech.speechlet.interfaces.audioplayer.CurrentPlaybackState param_3 = (com.amazon.speech.speechlet.interfaces.audioplayer.CurrentPlaybackState) Reflector.getInstance("com.amazon.speech.speechlet.interfaces.audioplayer.CurrentPlaybackState");
      Reflector.setField(param_3, "token", null);
      Reflector.setField(param_3, "playerActivity", null);
      Reflector.setField(param_3, "offsetInMilliseconds", param_2);
      Object param_4 = Reflector.getInstance("com.amazon.speech.speechlet.interfaces.audioplayer.request.PlaybackFailedRequest$Builder");
      Reflector.setField(param_4, "token", param_1);
      Reflector.setField(param_4, "error", null);
      Reflector.setField(param_4, "timestamp", null);
      Reflector.setField(param_4, "requestId", null);
      Reflector.setField(param_4, "locale", null);
      Reflector.setField(param_4, "currentPlaybackState", param_3);
      Object builder = param_4;

      /* Act */
      /* Creating object to test constructor */
      Class<?> c = Reflector.forName("com.amazon.speech.speechlet.interfaces.audioplayer.request.PlaybackFailedRequest");
      Constructor<?> ctor = c.getDeclaredConstructor(Reflector.forName("com.amazon.speech.speechlet.interfaces.audioplayer.request.PlaybackFailedRequest$Builder"));
      ctor.setAccessible(true);
      instance = ctor.newInstance(builder);

      /* Method return type is void, or not expected to return */
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_speechlet_interfaces_audioplayer_request_PlaybackFailedRequest_getCurrentPlaybackState_bc7b61e9ab741df_000() throws Throwable {

    com.amazon.speech.speechlet.interfaces.audioplayer.CurrentPlaybackState retval;
    {
      /* Arrange */
      String param_1 = "";
      String param_3 = "";
      com.amazon.speech.speechlet.interfaces.audioplayer.request.PlaybackFailedRequest param_4 = (com.amazon.speech.speechlet.interfaces.audioplayer.request.PlaybackFailedRequest) Reflector.getInstance("com.amazon.speech.speechlet.interfaces.audioplayer.request.PlaybackFailedRequest");
      Reflector.setField(param_4, "token", param_1);
      Reflector.setField(param_4, "error", null);
      Reflector.setField(param_4, "requestId", param_3);
      Reflector.setField(param_4, "timestamp", null);
      Reflector.setField(param_4, "locale", null);
      Reflector.setField(param_4, "currentPlaybackState", null);

      /* Act */
      retval = param_4.getCurrentPlaybackState();
    }
    {
      /* Assert result */
      Assert.assertEquals(null, retval);
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_speechlet_interfaces_audioplayer_request_PlaybackFailedRequest_getError_2e8a546542268f26_000() throws Throwable {

    com.amazon.speech.speechlet.interfaces.audioplayer.Error retval;
    {
      /* Arrange */
      String param_1 = "";
      String param_3 = "";
      com.amazon.speech.speechlet.interfaces.audioplayer.request.PlaybackFailedRequest param_4 = (com.amazon.speech.speechlet.interfaces.audioplayer.request.PlaybackFailedRequest) Reflector.getInstance("com.amazon.speech.speechlet.interfaces.audioplayer.request.PlaybackFailedRequest");
      Reflector.setField(param_4, "token", param_1);
      Reflector.setField(param_4, "error", null);
      Reflector.setField(param_4, "requestId", param_3);
      Reflector.setField(param_4, "timestamp", null);
      Reflector.setField(param_4, "locale", null);
      Reflector.setField(param_4, "currentPlaybackState", null);

      /* Act */
      retval = param_4.getError();
    }
    {
      /* Assert result */
      Assert.assertEquals(null, retval);
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_speechlet_interfaces_audioplayer_request_PlaybackFailedRequest_getToken_8caf23b0091251aa_000() throws Throwable {

    String retval;
    {
      /* Arrange */
      String param_1 = "";
      com.amazon.speech.speechlet.interfaces.audioplayer.request.PlaybackFailedRequest param_2 = (com.amazon.speech.speechlet.interfaces.audioplayer.request.PlaybackFailedRequest) Reflector.getInstance("com.amazon.speech.speechlet.interfaces.audioplayer.request.PlaybackFailedRequest");
      Reflector.setField(param_2, "token", null);
      Reflector.setField(param_2, "error", null);
      Reflector.setField(param_2, "requestId", param_1);
      Reflector.setField(param_2, "timestamp", null);
      Reflector.setField(param_2, "locale", null);
      Reflector.setField(param_2, "currentPlaybackState", null);

      /* Act */
      retval = param_2.getToken();
    }
    {
      /* Assert result */
      Assert.assertEquals(null, retval);
    }
  }
}
