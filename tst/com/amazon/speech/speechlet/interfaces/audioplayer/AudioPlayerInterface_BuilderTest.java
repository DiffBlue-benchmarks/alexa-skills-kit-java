package com.amazon.speech.speechlet.interfaces.audioplayer;

import org.junit.Assert;
import org.junit.rules.ExpectedException;
import org.junit.Test;

import java.lang.reflect.Array;
import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

import com.diffblue.java_testcase.CompareWithFieldList;
import com.diffblue.java_testcase.FieldList;
import com.diffblue.java_testcase.IterAnswer;
import com.diffblue.java_testcase.Reflector;

public class AudioPlayerInterface_BuilderTest {

  @org.junit.Rule
  public ExpectedException thrown = ExpectedException.none();

  /* testedClasses: AudioPlayerInterface_Builder */


  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_speechlet_interfaces_audioplayer_AudioPlayerInterface$Builder__init__299ea8b04d582849_000() throws Throwable {

    Object instance;
    {
      /* Arrange */
      Object x0 = null;

      /* Act */
      /* Creating object to test constructor */
      Class<?> c = Reflector.forName("com.amazon.speech.speechlet.interfaces.audioplayer.AudioPlayerInterface$Builder");
      Constructor<?> ctor = c.getDeclaredConstructor(Reflector.forName("com.amazon.speech.speechlet.interfaces.audioplayer.AudioPlayerInterface$1"));
      ctor.setAccessible(true);
      instance = ctor.newInstance(x0);

      /* Method return type is void, or not expected to return */
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_speechlet_interfaces_audioplayer_AudioPlayerInterface$Builder__init__a3113d81cd22bcb1_000() throws Throwable {

    Object instance;
    {
      /* Act */
      /* Creating object to test constructor */
      Class<?> c = Reflector.forName("com.amazon.speech.speechlet.interfaces.audioplayer.AudioPlayerInterface$Builder");
      Constructor<?> ctor = c.getDeclaredConstructor();
      ctor.setAccessible(true);
      instance = ctor.newInstance();

      /* Method return type is void, or not expected to return */
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_speechlet_interfaces_audioplayer_AudioPlayerInterface$Builder_build_5b03763909970c50_000() throws Throwable {

    com.amazon.speech.speechlet.interfaces.audioplayer.AudioPlayerInterface retval;
    {
      /* Arrange */
      Object param_0 = Reflector.getInstance("com.amazon.speech.speechlet.interfaces.audioplayer.AudioPlayerInterface$Builder");

      /* Act */
      Class<?> c = Reflector.forName("com.amazon.speech.speechlet.interfaces.audioplayer.AudioPlayerInterface$Builder");
      Method m = c.getDeclaredMethod("build");
      m.setAccessible(true);
      retval = (com.amazon.speech.speechlet.interfaces.audioplayer.AudioPlayerInterface) m.invoke(param_0);
    }
    {
      /* Assert result */
      Assert.assertNotNull(retval);
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_speechlet_interfaces_audioplayer_AudioPlayerInterface__clinit__68e1d02e6f93f9bf_000() throws Throwable {

    Object constructed;
    {
      /* Act */
      /* Using constructor to test static initializer */
      constructed = Reflector.getInstance("com.amazon.speech.speechlet.interfaces.audioplayer.AudioPlayerInterface");
      /* Method return type is void, or not expected to return */
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_speechlet_interfaces_audioplayer_AudioPlayerInterface__init__428ad36344cd5ec3_000() throws Throwable {

    Object instance;
    {
      /* Act */
      /* Creating object to test constructor */
      Class<?> c = Reflector.forName("com.amazon.speech.speechlet.interfaces.audioplayer.AudioPlayerInterface");
      Constructor<?> ctor = c.getDeclaredConstructor();
      ctor.setAccessible(true);
      instance = ctor.newInstance();

      /* Method return type is void, or not expected to return */
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_speechlet_interfaces_audioplayer_AudioPlayerInterface__init__6e31bf5dd483755b_000() throws Throwable {

    Object instance;
    {
      /* Arrange */
      Object builder = null;

      /* Act */
      /* Creating object to test constructor */
      Class<?> c = Reflector.forName("com.amazon.speech.speechlet.interfaces.audioplayer.AudioPlayerInterface");
      Constructor<?> ctor = c.getDeclaredConstructor(Reflector.forName("com.amazon.speech.speechlet.interfaces.audioplayer.AudioPlayerInterface$Builder"));
      ctor.setAccessible(true);
      instance = ctor.newInstance(builder);

      /* Method return type is void, or not expected to return */
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_speechlet_interfaces_audioplayer_AudioPlayerInterface__init__e2aace16990eb2ae_000() throws Throwable {

    Object instance;
    {
      /* Arrange */
      Object x0 = null;
      Object x1 = null;

      /* Act */
      /* Creating object to test constructor */
      Class<?> c = Reflector.forName("com.amazon.speech.speechlet.interfaces.audioplayer.AudioPlayerInterface");
      Constructor<?> ctor = c.getDeclaredConstructor(Reflector.forName("com.amazon.speech.speechlet.interfaces.audioplayer.AudioPlayerInterface$Builder"), Reflector.forName("com.amazon.speech.speechlet.interfaces.audioplayer.AudioPlayerInterface$1"));
      ctor.setAccessible(true);
      instance = ctor.newInstance(x0, x1);

      /* Method return type is void, or not expected to return */
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_speechlet_interfaces_audioplayer_AudioPlayerInterface_builder_833904ff1f1a4f7f_000() throws Throwable {

    Object retval;
    {
      /* Act */
      retval = com.amazon.speech.speechlet.interfaces.audioplayer.AudioPlayerInterface.builder();
    }
    {
      /* Assert result */
      Assert.assertNotNull(retval);
    }
  }
}
