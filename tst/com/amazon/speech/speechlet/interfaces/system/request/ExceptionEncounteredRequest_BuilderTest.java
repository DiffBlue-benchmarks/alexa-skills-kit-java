package com.amazon.speech.speechlet.interfaces.system.request;

import org.junit.Assert;
import org.junit.rules.ExpectedException;
import org.junit.Test;

import java.lang.reflect.Array;
import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

import com.diffblue.java_testcase.CompareWithFieldList;
import com.diffblue.java_testcase.FieldList;
import com.diffblue.java_testcase.IterAnswer;
import com.diffblue.java_testcase.Reflector;

public class ExceptionEncounteredRequest_BuilderTest {

  @org.junit.Rule
  public ExpectedException thrown = ExpectedException.none();

  /* testedClasses: ExceptionEncounteredRequest_Builder */


  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_speechlet_interfaces_system_request_ExceptionEncounteredRequest$Builder_access$100_48a299ef4523ad3f_000() throws Throwable {

    com.amazon.speech.speechlet.interfaces.system.Error retval;
    {
      /* Arrange */
      Object param_0 = Reflector.getInstance("com.amazon.speech.speechlet.interfaces.system.request.ExceptionEncounteredRequest$Builder");
      Reflector.setField(param_0, "cause", null);
      Reflector.setField(param_0, "locale", null);
      Reflector.setField(param_0, "timestamp", null);
      Reflector.setField(param_0, "requestId", null);
      Reflector.setField(param_0, "error", null);
      Object x0 = param_0;

      /* Act */
      Class<?> c = Reflector.forName("com.amazon.speech.speechlet.interfaces.system.request.ExceptionEncounteredRequest$Builder");
      Method m = c.getDeclaredMethod("access$100", Reflector.forName("com.amazon.speech.speechlet.interfaces.system.request.ExceptionEncounteredRequest$Builder"));
      m.setAccessible(true);
      retval = (com.amazon.speech.speechlet.interfaces.system.Error) m.invoke(null, x0);
    }
    {
      /* Assert result */
      Assert.assertEquals(null, retval);
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_speechlet_interfaces_system_request_ExceptionEncounteredRequest$Builder_access$200_6086f76b459118e_000() throws Throwable {

    com.amazon.speech.speechlet.interfaces.system.ErrorCause retval;
    {
      /* Arrange */
      Object param_0 = Reflector.getInstance("com.amazon.speech.speechlet.interfaces.system.request.ExceptionEncounteredRequest$Builder");
      Reflector.setField(param_0, "cause", null);
      Reflector.setField(param_0, "locale", null);
      Reflector.setField(param_0, "timestamp", null);
      Reflector.setField(param_0, "requestId", null);
      Reflector.setField(param_0, "error", null);
      Object x0 = param_0;

      /* Act */
      Class<?> c = Reflector.forName("com.amazon.speech.speechlet.interfaces.system.request.ExceptionEncounteredRequest$Builder");
      Method m = c.getDeclaredMethod("access$200", Reflector.forName("com.amazon.speech.speechlet.interfaces.system.request.ExceptionEncounteredRequest$Builder"));
      m.setAccessible(true);
      retval = (com.amazon.speech.speechlet.interfaces.system.ErrorCause) m.invoke(null, x0);
    }
    {
      /* Assert result */
      Assert.assertEquals(null, retval);
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_speechlet_interfaces_system_request_ExceptionEncounteredRequest$Builder_withCause_faee3a142528994d_000() throws Throwable {

    Object retval;
    {
      /* Arrange */
      String param_2 = "";
      Object param_1 = Reflector.getInstance("com.amazon.speech.speechlet.interfaces.system.request.ExceptionEncounteredRequest$Builder");
      Reflector.setField(param_1, "cause", null);
      Reflector.setField(param_1, "locale", null);
      Reflector.setField(param_1, "timestamp", null);
      Reflector.setField(param_1, "requestId", param_2);
      Reflector.setField(param_1, "error", null);
      com.amazon.speech.speechlet.interfaces.system.ErrorCause cause = null;

      /* Act */
      Class<?> c = Reflector.forName("com.amazon.speech.speechlet.interfaces.system.request.ExceptionEncounteredRequest$Builder");
      Method m = c.getDeclaredMethod("withCause", Reflector.forName("com.amazon.speech.speechlet.interfaces.system.ErrorCause"));
      m.setAccessible(true);
      retval = (Object) m.invoke(param_1, cause);
    }
    {
      /* Assert result */
      Assert.assertNotNull(retval);
      Assert.assertNotNull(((String) Reflector.getInstanceField(retval, "requestId")));
      Assert.assertEquals("", ((String) Reflector.getInstanceField(retval, "requestId")));
      Assert.assertEquals(null, Reflector.getInstanceField(retval, "timestamp"));
      Assert.assertEquals(null, Reflector.getInstanceField(retval, "locale"));
      Assert.assertEquals(null, Reflector.getInstanceField(retval, "error"));
      Assert.assertEquals(null, Reflector.getInstanceField(retval, "cause"));
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_speechlet_interfaces_system_request_ExceptionEncounteredRequest$Builder_withError_4dd3b2b2d7752d1b_000() throws Throwable {

    Object retval;
    {
      /* Arrange */
      String param_2 = "";
      Object param_1 = Reflector.getInstance("com.amazon.speech.speechlet.interfaces.system.request.ExceptionEncounteredRequest$Builder");
      Reflector.setField(param_1, "cause", null);
      Reflector.setField(param_1, "locale", null);
      Reflector.setField(param_1, "timestamp", null);
      Reflector.setField(param_1, "requestId", param_2);
      Reflector.setField(param_1, "error", null);
      com.amazon.speech.speechlet.interfaces.system.Error error = null;

      /* Act */
      Class<?> c = Reflector.forName("com.amazon.speech.speechlet.interfaces.system.request.ExceptionEncounteredRequest$Builder");
      Method m = c.getDeclaredMethod("withError", Reflector.forName("com.amazon.speech.speechlet.interfaces.system.Error"));
      m.setAccessible(true);
      retval = (Object) m.invoke(param_1, error);
    }
    {
      /* Assert result */
      Assert.assertNotNull(retval);
      Assert.assertNotNull(((String) Reflector.getInstanceField(retval, "requestId")));
      Assert.assertEquals("", ((String) Reflector.getInstanceField(retval, "requestId")));
      Assert.assertEquals(null, Reflector.getInstanceField(retval, "timestamp"));
      Assert.assertEquals(null, Reflector.getInstanceField(retval, "locale"));
      Assert.assertEquals(null, Reflector.getInstanceField(retval, "error"));
      Assert.assertEquals(null, Reflector.getInstanceField(retval, "cause"));
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_speechlet_interfaces_system_request_ExceptionEncounteredRequest__init__540080dcea3c7c_000() throws Throwable {

    Object instance;
    {
      /* Arrange */
      Object param_0 = Reflector.getInstance("com.amazon.speech.speechlet.interfaces.system.request.ExceptionEncounteredRequest$Builder");
      Reflector.setField(param_0, "cause", null);
      Reflector.setField(param_0, "locale", null);
      Reflector.setField(param_0, "timestamp", null);
      Reflector.setField(param_0, "requestId", null);
      Reflector.setField(param_0, "error", null);
      Object builder = param_0;

      /* Act */
      /* Creating object to test constructor */
      Class<?> c = Reflector.forName("com.amazon.speech.speechlet.interfaces.system.request.ExceptionEncounteredRequest");
      Constructor<?> ctor = c.getDeclaredConstructor(Reflector.forName("com.amazon.speech.speechlet.interfaces.system.request.ExceptionEncounteredRequest$Builder"));
      ctor.setAccessible(true);
      instance = ctor.newInstance(builder);

      /* Method return type is void, or not expected to return */
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_speechlet_interfaces_system_request_ExceptionEncounteredRequest__init__88507740883b9436_000() throws Throwable {

    Object instance;
    {
      /* Arrange */
      String requestId = null;
      java.util.Date timestamp = null;
      java.util.Locale locale = null;
      com.amazon.speech.speechlet.interfaces.system.Error error = null;
      com.amazon.speech.speechlet.interfaces.system.ErrorCause cause = null;

      /* Act */
      /* Creating object to test constructor */
      Class<?> c = Reflector.forName("com.amazon.speech.speechlet.interfaces.system.request.ExceptionEncounteredRequest");
      Constructor<?> ctor = c.getDeclaredConstructor(Reflector.forName("java.lang.String"), Reflector.forName("java.util.Date"), Reflector.forName("java.util.Locale"), Reflector.forName("com.amazon.speech.speechlet.interfaces.system.Error"), Reflector.forName("com.amazon.speech.speechlet.interfaces.system.ErrorCause"));
      ctor.setAccessible(true);
      instance = ctor.newInstance(requestId, timestamp, locale, error, cause);

      /* Method return type is void, or not expected to return */
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_speechlet_interfaces_system_request_ExceptionEncounteredRequest__init__98a9597b7cd592d4_000() throws Throwable {

    Object instance;
    {
      /* Arrange */
      Object param_2 = Reflector.getInstance("com.amazon.speech.speechlet.interfaces.system.request.ExceptionEncounteredRequest$Builder");
      Reflector.setField(param_2, "cause", null);
      Reflector.setField(param_2, "locale", null);
      Reflector.setField(param_2, "timestamp", null);
      Reflector.setField(param_2, "requestId", null);
      Reflector.setField(param_2, "error", null);
      Object x0 = param_2;
      Object x1 = null;

      /* Act */
      /* Creating object to test constructor */
      Class<?> c = Reflector.forName("com.amazon.speech.speechlet.interfaces.system.request.ExceptionEncounteredRequest");
      Constructor<?> ctor = c.getDeclaredConstructor(Reflector.forName("com.amazon.speech.speechlet.interfaces.system.request.ExceptionEncounteredRequest$Builder"), Reflector.forName("com.amazon.speech.speechlet.interfaces.system.request.ExceptionEncounteredRequest$1"));
      ctor.setAccessible(true);
      instance = ctor.newInstance(x0, x1);

      /* Method return type is void, or not expected to return */
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_speechlet_interfaces_system_request_ExceptionEncounteredRequest_getCause_e960235d61a06f30_000() throws Throwable {

    com.amazon.speech.speechlet.interfaces.system.ErrorCause retval;
    {
      /* Arrange */
      String param_1 = "";
      com.amazon.speech.speechlet.interfaces.system.request.ExceptionEncounteredRequest param_2 = (com.amazon.speech.speechlet.interfaces.system.request.ExceptionEncounteredRequest) Reflector.getInstance("com.amazon.speech.speechlet.interfaces.system.request.ExceptionEncounteredRequest");
      Reflector.setField(param_2, "cause", null);
      Reflector.setField(param_2, "requestId", param_1);
      Reflector.setField(param_2, "locale", null);
      Reflector.setField(param_2, "timestamp", null);
      Reflector.setField(param_2, "error", null);

      /* Act */
      retval = param_2.getCause();
    }
    {
      /* Assert result */
      Assert.assertEquals(null, retval);
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_amazon_speech_speechlet_interfaces_system_request_ExceptionEncounteredRequest_getError_4ff8c01559545aa2_000() throws Throwable {

    com.amazon.speech.speechlet.interfaces.system.Error retval;
    {
      /* Arrange */
      String param_1 = "";
      com.amazon.speech.speechlet.interfaces.system.request.ExceptionEncounteredRequest param_2 = (com.amazon.speech.speechlet.interfaces.system.request.ExceptionEncounteredRequest) Reflector.getInstance("com.amazon.speech.speechlet.interfaces.system.request.ExceptionEncounteredRequest");
      Reflector.setField(param_2, "cause", null);
      Reflector.setField(param_2, "requestId", param_1);
      Reflector.setField(param_2, "locale", null);
      Reflector.setField(param_2, "timestamp", null);
      Reflector.setField(param_2, "error", null);

      /* Act */
      retval = param_2.getError();
    }
    {
      /* Assert result */
      Assert.assertEquals(null, retval);
    }
  }
}
